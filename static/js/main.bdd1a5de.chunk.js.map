{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","handleToVisible","handleToHidden","handleName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aACX,WACE,EAAKC,SAAS,CACZL,KAAM,IAAIC,OAGZK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAE5B,OAdR,gCAkBE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IACN,wCACUE,EAAUC,KADpB,eAC+BR,KAAKS,MAAMD,KAD1C,QAtBR,kCA4BE,WACEE,cAAcV,KAAKC,SA7BvB,oBAgCE,WACE,IAAQH,EAASE,KAAKH,MAAdC,KAER,OACE,mDACoBA,EAAKQ,2BArC/B,GAA2BK,IAAMC,YCgDlBC,E,4MA5CbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,gBAAkB,WAChB,EAAKb,SAAS,CACZW,gBAAgB,K,EAIpBG,eAAiB,WACf,EAAKd,SAAS,CACZW,gBAAgB,K,EAIpBI,WAAa,WACX,EAAKf,SAAS,CACZY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,MAAsCrB,KAAKH,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACCR,GAAkB,kBAAC,EAAD,CAAON,KAAMO,IAChC,4BAAQQ,KAAK,SAASC,QAASxB,KAAKgB,iBAApC,cAGA,4BAAQO,KAAK,SAASC,QAASxB,KAAKiB,gBAApC,cAGA,4BAAQM,KAAK,SAASC,QAASxB,KAAKkB,YAApC,wB,GArCUP,IAAMC,WCFxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bdd1a5de.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(\n      () => {\n        this.setState({\n          date: new Date(),\n        });\n        // eslint-disable-next-line no-console\n        console.log(this.state.date.toLocaleTimeString());\n      }\n      , 1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed `\n        + `from ${prevProps.name} to ${this.props.name}.`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        {`Current time: ${date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  }\n\n  handleToVisible = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  handleToHidden = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  handleName = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 100),\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <button type=\"button\" onClick={this.handleToVisible}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={this.handleToHidden}>\n          Hide Clock\n        </button>\n        <button type=\"submit\" onClick={this.handleName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}